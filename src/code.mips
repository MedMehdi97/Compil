.data
ln : 	.asciiz "\n"
vrai : 	.asciiz "vrai"
faux : 	.asciiz "faux"
ErreurDivisionParZero : 	.asciiz "ErreurDivisionParZero"
ErreurTailleTableau : 	.asciiz "ErreurTailleTableau"
ErreurIndiceTableau : 	.asciiz "ErreurIndiceTableau"
ErreurAffectationTailleDesTableauxDifferente : 	.asciiz "ErreurAffectationTailleDesTableauxDifferente"

.text
main :

move $s7,$sp

move $a0,$sp

addi $a0, $a0, 4

#Declaration tableau
li $v0, 3
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
bge $v0, 1, FinErreurTaille1
li $v0, 4
la $a0, ErreurTailleTableau
syscall
b end
FinErreurTaille1:
sw $v0, 0($sp)
addi $sp, $sp, -4
li $t8, -4
mult $v0, $t8
mflo $v0
add $sp, $sp, $v0
#Declaration fonction
j fonctionjmp1
a1:
sw $ra, ($sp)
addi $sp, $sp, -4
sw $s2, ($sp)
addi $sp, $sp, -4
li $v0, 1
sw $v0, ($sp)
addi $sp, $sp, -4
move $s2, $sp
lw $v0, 16($sp)
sw $v0, 0($sp)
addi $sp, $sp, -4
#Declaration tableau
lw $v0, 0($s2)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
bge $v0, 1, FinErreurTaille2
li $v0, 4
la $a0, ErreurTailleTableau
syscall
b end
FinErreurTaille2:
sw $v0, 0($sp)
addi $sp, $sp, -4
sw $a0, 0($sp)
addi $sp, $sp, -4
li $t8, 4
mult $v0, $t8
mflo $v0
add $a0, $a0, $v0
#Affectation Case Tableau
li $v0, 1
sw $v0, 0($sp)
addi $sp, $sp, -4
li $v0, 0
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
lw $t8, -4($s2)
bge $v0, $t8 , ErreurIndice1
bge $v0, 0, FinErreurIndice1
ErreurIndice1 :
li $v0, 4
la $a0, ErreurIndiceTableau
syscall
b end
FinErreurIndice1 :
li $t8, 4 
mult $v0, $t8
mflo $v0
lw $t8, -8($s2)
add $a1, $v0, ,$t8
addi $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, 0($a1)
#Affectation Case Tableau
li $v0, 2
sw $v0, 0($sp)
addi $sp, $sp, -4
li $v0, 1
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
lw $t8, -4($s2)
bge $v0, $t8 , ErreurIndice2
bge $v0, 0, FinErreurIndice2
ErreurIndice2 :
li $v0, 4
la $a0, ErreurIndiceTableau
syscall
b end
FinErreurIndice2 :
li $t8, 4 
mult $v0, $t8
mflo $v0
lw $t8, -8($s2)
add $a1, $v0, ,$t8
addi $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, 0($a1)
#Affectation Case Tableau
li $v0, 3
sw $v0, 0($sp)
addi $sp, $sp, -4
li $v0, 2
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
lw $t8, -4($s2)
bge $v0, $t8 , ErreurIndice3
bge $v0, 0, FinErreurIndice3
ErreurIndice3 :
li $v0, 4
la $a0, ErreurIndiceTableau
syscall
b end
FinErreurIndice3 :
li $t8, 4 
mult $v0, $t8
mflo $v0
lw $t8, -8($s2)
add $a1, $v0, ,$t8
addi $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, 0($a1)

#Instruction Ecrire 
li $v0, 0
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
lw $t8, -4($s2)
bge $v0, $t8 , ErreurIndice4
bge $v0, 0, FinErreurIndice4
ErreurIndice4 :
li $v0, 4
la $a0, ErreurIndiceTableau
syscall
b end
FinErreurIndice4 :
li $t8, 4 
mult $v0, $t8
mflo $v0
lw $t8, -8($s2)
add $a1, $v0, ,$t8
lw $v0, 0($a1)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
move $a0, $v0
li $v0, 1
syscall

#Saut de ligne
li $v0, 4
la $a0, ln
syscall

#Instruction Ecrire 
li $v0, 1
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
lw $t8, -4($s2)
bge $v0, $t8 , ErreurIndice5
bge $v0, 0, FinErreurIndice5
ErreurIndice5 :
li $v0, 4
la $a0, ErreurIndiceTableau
syscall
b end
FinErreurIndice5 :
li $t8, 4 
mult $v0, $t8
mflo $v0
lw $t8, -8($s2)
add $a1, $v0, ,$t8
lw $v0, 0($a1)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
move $a0, $v0
li $v0, 1
syscall

#Saut de ligne
li $v0, 4
la $a0, ln
syscall

#Instruction Ecrire 
li $v0, 2
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
lw $t8, -4($s2)
bge $v0, $t8 , ErreurIndice6
bge $v0, 0, FinErreurIndice6
ErreurIndice6 :
li $v0, 4
la $a0, ErreurIndiceTableau
syscall
b end
FinErreurIndice6 :
li $t8, 4 
mult $v0, $t8
mflo $v0
lw $t8, -8($s2)
add $a1, $v0, ,$t8
lw $v0, 0($a1)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
move $a0, $v0
li $v0, 1
syscall

#Saut de ligne
li $v0, 4
la $a0, ln
syscall
#Retour de la fonction
li $v0, 1
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp,$sp, 4
lw $v0, 0($sp)
addi $sp,$sp, 20
lw $t8, 0($sp)
addi $sp,$sp, 4
lw $ra,($sp)
move $s2, $t8
sw $v0, ($sp)
addi $sp,$sp, -4
jr $ra
fonctionjmp1:

#Instruction Ecrire 
#Appel de fonction 
li $v0, 3
sw $v0, 0($sp)
addi $sp, $sp, -4
jal a1
addi $sp, $sp, 4
lw $v0, 0($sp)
addi $sp, $sp, 4
sw $v0, ($sp)
addi $sp,$sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
move $a0, $v0
li $v0, 1
syscall

#Saut de ligne
li $v0, 4
la $a0, ln
syscall

#Instruction Ecrire 
li $v0, 0
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
lw $t8, 0($s7)
bge $v0, $t8 , ErreurIndice7
bge $v0, 0, FinErreurIndice7
ErreurIndice7 :
li $v0, 4
la $a0, ErreurIndiceTableau
syscall
b end
FinErreurIndice7 :
li $t8, -4 
mult $v0, $t8
mflo $v0
li $t8, -4
add $a1, $v0, $t8
add $a1, $s7, $a1
lw $v0, 0($a1)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
move $a0, $v0
li $v0, 1
syscall

#Saut de ligne
li $v0, 4
la $a0, ln
syscall

#Instruction Ecrire 
li $v0, 1
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
lw $t8, 0($s7)
bge $v0, $t8 , ErreurIndice8
bge $v0, 0, FinErreurIndice8
ErreurIndice8 :
li $v0, 4
la $a0, ErreurIndiceTableau
syscall
b end
FinErreurIndice8 :
li $t8, -4 
mult $v0, $t8
mflo $v0
li $t8, -4
add $a1, $v0, $t8
add $a1, $s7, $a1
lw $v0, 0($a1)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
move $a0, $v0
li $v0, 1
syscall

#Saut de ligne
li $v0, 4
la $a0, ln
syscall

#Instruction Ecrire 
li $v0, 2
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
lw $t8, 0($s7)
bge $v0, $t8 , ErreurIndice9
bge $v0, 0, FinErreurIndice9
ErreurIndice9 :
li $v0, 4
la $a0, ErreurIndiceTableau
syscall
b end
FinErreurIndice9 :
li $t8, -4 
mult $v0, $t8
mflo $v0
li $t8, -4
add $a1, $v0, $t8
add $a1, $s7, $a1
lw $v0, 0($a1)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
move $a0, $v0
li $v0, 1
syscall

#Saut de ligne
li $v0, 4
la $a0, ln
syscall

end :

li $v0, 10
syscall 
